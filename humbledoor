#!/bin/bash
 
### BEGIN INIT INFO
# Provides:          myservice
# Required-Start:    $remote_fs $syslog
# Required-Stop:     $remote_fs $syslog
# Default-Start:     3 4 5
# Default-Stop:      0 1 2 6
# Short-Description: start stop humbledoor process
# Description:      Learn more about humbledoor here: https://github.com/naishe/humbledoor 
### END INIT INFO

if [[ "$(id -u -n)" != "root" ]]; then
	echo "The user must be root. Please start the script with as sudo $0 {start|stop|restart|status}"
	exit 1
fi

# Change the next 3 lines to suit where you install your script and what you want to call it
DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

# if used /bin/sh as interpreter this worked
# Absolute path to this script. /home/user/bin/foo.sh
# SCRIPT=$(readlink -f $0)
# Absolute path this script is in. /home/user/bin
# DIR=`dirname $SCRIPT`


DAEMON_FILE=$DIR/humbledoor.py
DAEMON=$(which python)
DAEMON_NAME=humbledoor
 
# Add any command line options for your daemon here
DAEMON_OPTS="$DAEMON_FILE"
 
# This next line determines what user the script runs as.
# Root generally not recommended but necessary if you are using the Raspberry Pi GPIO from Python.
DAEMON_USER=root
 
# The process ID of the script when it runs is stored here:
PIDFILE=/var/run/$DAEMON_NAME.pid
 
. /lib/lsb/init-functions
 
do_start () {
    bg_opt="--background"
    if [[ "$1" == "-f" ]] ; then
      echo "Starting is foreground"
      bg_opt=""
		else
      echo "Starting in background"
    fi

    log_daemon_msg "Starting system $DAEMON_NAME daemon"
    start-stop-daemon --start ${bg_opt} --pidfile $PIDFILE --make-pidfile --user $DAEMON_USER --chuid $DAEMON_USER --startas $DAEMON -- $DAEMON_OPTS
    log_end_msg $?
}
do_stop () {
    log_daemon_msg "Stopping system $DAEMON_NAME daemon"
    start-stop-daemon --stop --pidfile $PIDFILE --retry 10
    log_end_msg $?
}
 
case "$1" in
 
    start|stop)
        do_${1} ${2}
        ;;
 
    restart|reload|force-reload)
        do_stop
        do_start
        ;;
 
    status)
        status_of_proc "$DAEMON_NAME" "$DAEMON" && exit 0 || exit $?
        ;;
    *)
        echo "Usage: ${0} {start|stop|restart|status}"
        exit 1
        ;;
 
esac
exit 0
